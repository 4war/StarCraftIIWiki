{
    "compilerOptions": {
        // В видосе сказал, что эта настройка не нужна, так как у нас уже есть webpack
        "outDir": "./dist/",

        // Подсвечивает все места, где не указан тип
        // Однако это не значит, что теперь вовсе нельзя использовать any
        // Это означает лишь, что в подобных ситациях разработчик должен явно писать any
        // (Я пиздец как рад, что такая настройка есть)
        "noImplicitAny": true,
        "module": "ESNext",

        // В какую спецификацию компилируем: для поддержки большинства браузеров
        "target": "es5",

        // делает возможным return (
        //      <div> some text </div>
        // );
        "jsx": "react-jsx",

        // Компилятор будет обрабатывать не только TS файлы, но и JS файлы
        "allowJs": true,
        "moduleResolution": "node",

        // Для абсолютного импорта (одна точка = текущая папка)
        //"baseUrl": ".",
        
        // esModuleInterop позволяет работать с пакетами, которые используют
        // common js как с обычными пакетами с помощью import (require() module.export) = common js
        // import Moment from 'moment';
        // console.log(Moment);
        // без флага esModuleInterop результат undefined
        // с флагом результат [object Object]
        "esModuleInterop": true,

        // Если какая-либо библиоткеа не имеет default import
        // ладеры вроде ts-loader или babel-loader автоматически создают их 
        // вместо такого импорта 
        // import * as React from 'react';
        // можно писать такой
        // import React from 'react';
        "allowSyntheticDefaultImports": true,
    },

    //Хз, зачем это, но у меня ничего не падало
    "ts-node": {
        "compilerOptions": {
            "module": "CommonJS"
        }
    }
}